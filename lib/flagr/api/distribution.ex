# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule Flagr.Api.Distribution do
  @moduledoc """
  API calls for all endpoints tagged `Distribution`.
  """

  alias Flagr.Connection
  import Flagr.RequestBuilder


  @doc """

  ## Parameters

  - connection (Flagr.Connection): Connection to server
  - flag_id (integer()): numeric ID of the flag
  - segment_id (integer()): numeric ID of the segment
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, [%Distribution{}, ...]} on success
  {:error, info} on failure
  """
  @spec find_distributions(Tesla.Env.client, integer(), integer(), keyword()) :: {:ok, list(Flagr.Model.Distribution.t)} | {:error, Tesla.Env.t}
  def find_distributions(connection, flag_id, segment_id, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/flags/#{flag_id}/segments/#{segment_id}/distributions")
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode([%Flagr.Model.Distribution{}])
  end

  @doc """
  replace the distribution with the new setting

  ## Parameters

  - connection (Flagr.Connection): Connection to server
  - flag_id (integer()): numeric ID of the flag
  - segment_id (integer()): numeric ID of the segment
  - body (PutDistributionsRequest): array of distributions
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, [%Distribution{}, ...]} on success
  {:error, info} on failure
  """
  @spec put_distributions(Tesla.Env.client, integer(), integer(), Flagr.Model.PutDistributionsRequest.t, keyword()) :: {:ok, list(Flagr.Model.Distribution.t)} | {:error, Tesla.Env.t}
  def put_distributions(connection, flag_id, segment_id, body, _opts \\ []) do
    %{}
    |> method(:put)
    |> url("/flags/#{flag_id}/segments/#{segment_id}/distributions")
    |> add_param(:body, :"body", body)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode([%Flagr.Model.Distribution{}])
  end
end
